name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Trigger on tags like v0.1.0

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: lilac-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: lilac-macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: lilac-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update Cargo.toml version
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/v//')
          sed -i "s/^version = .*/version = \"$VERSION\"/" agent/Cargo.toml

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
        working-directory: ./agent

      - name: Package binary
        shell: bash
        run: |
          BINARY_PATH="agent/target/${{ matrix.target }}/release/lilac"
          tar -czf "${{ matrix.asset_name }}.tar.gz" -C "$(dirname "$BINARY_PATH")" "$(basename "$BINARY_PATH")"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.tar.gz
          asset_name: ${{ matrix.asset_name }}.tar.gz
          asset_content_type: application/gzip