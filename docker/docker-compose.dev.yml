services:
  backend:
    build:
      context: ../
      dockerfile: ./docker/backend/Dockerfile
    command: /opt/lilac/api/server
    depends_on:
      db:
        condition: service_healthy
        required: false
    env_file:
      - ../.env
    environment:
      - LILAC__DATABASE_URL=postgres://lilac-user:password@db/lilac
      - LILAC_CONFIG_FILE=/opt/lilac/api/lilac.toml
    ports:
      - '8081:8081'
    networks:
      - default
  
  web:
    build:
      context: ../
      dockerfile: ./docker/web/Dockerfile
    command: serve -s dist -l 8080
    depends_on:
      - backend
    env_file:
      - ../.env
    environment:
      - VITE_LILAC_API_ENDPOINT="http://localhost:8081"
    ports:
      - '8080:8080'
    networks:
      - default

  db:
    profiles: ["postgres"]
    image: postgres
    restart: always
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: lilac-user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: lilac
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata: {}

networks:
  network: {}